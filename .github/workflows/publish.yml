name: Publish NuGet Packages

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

jobs:
  pack-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Extract version from tag
        id: version
        run: |
          TAG="${GITHUB_REF##*/}"
          VERSION="${TAG#v}"
          echo "Version parsed: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Restore
        run: dotnet restore Godot.Globalizer.sln

      - name: Build (Release)
        run: dotnet build Godot.Globalizer.sln -c Release --no-restore

      - name: Pack (override version)
        run: |
          dotnet pack Godot.Globalizer.Abstractions/Godot.Globalizer.Abstractions.csproj -c Release -o artifacts /p:PackageVersion=${{ steps.version.outputs.version }} --no-build
          dotnet pack Godot.Globalizer/Godot.Globalizer/Godot.Globalizer.csproj -c Release -o artifacts /p:PackageVersion=${{ steps.version.outputs.version }} --no-build

      - name: Show packages
        run: ls -1 artifacts

      - name: Publish to NuGet
        if: success()
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          for pkg in artifacts/*.nupkg; do
            echo "Publishing $pkg";
            dotnet nuget push "$pkg" \
              --api-key "$NUGET_API_KEY" \
              --source https://api.nuget.org/v3/index.json \
              --skip-duplicate;
          done

      - name: Publish symbol packages (optional)
        if: success()
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          for spkg in artifacts/*.snupkg; do
            echo "Publishing symbol $spkg";
            dotnet nuget push "$spkg" \
              --api-key "$NUGET_API_KEY" \
              --source https://api.nuget.org/v3/index.json \
              --skip-duplicate || true;
          done

      - name: Summary
        run: echo "Published version ${{ steps.version.outputs.version }}"
